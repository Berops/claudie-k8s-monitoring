#@ load("@ytt:data", "data")
#@ load("metadata.lib.yaml", "metadata")
#@ load("labels.lib.yaml", "labels")
---
apiVersion: v1
kind: ServiceAccount
metadata: #@ metadata(data.values.promAdapterName, data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: #@ metadata(data.values.promAdapterName, data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - pods
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: #@ metadata("resource-metrics-server-resources", data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
---
#@overlay/match by=overlay.subset({"metadata": {"name":"system:aggregated-metrics-reader"}})
---
metadata:
  #@overlay/match-child-defaults missing_ok=True
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: #@ metadata("system:aggregated-metrics-reader", data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: #@ metadata(data.values.promAdapterName, data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ data.values.promAdapterName
subjects:
- kind: ServiceAccount
  name: #@ data.values.promAdapterName
  namespace: #@ data.values.namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: #@ metadata("resource-metrics:system:auth-delegator", data.values.namespace, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: #@ data.values.promAdapterName
  namespace: #@ data.values.namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: #@ metadata("resource-metrics-auth-reader", data.values.namespaceKubeSystem, app=data.values.promAdapterName, comp=data.values.promAdapterComponent, ver=data.values.promAdapterVersion)
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: #@ data.values.promAdapterName
  namespace: #@ data.values.namespace
